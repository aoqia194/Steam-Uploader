name: build

on:
  push:
    branches:
      - dev
  pull_request:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: windows-latest
            triplet: x64-windows-static
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: x64-osx

    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
  
    steps:
      - uses: actions/checkout@v4
        with:
          # For vcpkg if we decide to use it as a submodule. TODO:
          # submodules: true
          # Slows down checkout of sources and not needed most of the time.
          fetch-depth: 0

      # Installs CMake and Ninja build tools
      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      # Sets up vcpkg
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11.5

      - name: Prints output of run-vcpkg's action.
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

      # Run CMake (consumes CMakePreset.json and runs vcpkg to build pkgs
      - name: Run CMake and vcpkg
        uses: lukka/run-cmake@v10.8
        with:
          configurePreset: 'release'
          buildPreset: 'release'
          # buildPresetAdditionalArgs: "['--config Release']"
          # testPreset: 'all'
          # testPresetAdditionalArgs: "['--config Release']"

      - name: List1 $RUNNER_WORKSPACE before cpack
        run: find $RUNNER_WORKSPACE
        shell: bash

      # Pack build files using CPack
      - name: Run CPack
        run: cd build/release && cpack -G ZIP -C Release
        shell: bash

      - name: List1 $RUNNER_WORKSPACE after cpakc
        run: find $RUNNER_WORKSPACE
        shell: bash

      # Upload build artifacts for specific OS
      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.os }}
          path: dist/SteamUploader-*.zip
          retention-days: 7
          if-no-files-found: error
          overwrite: true
